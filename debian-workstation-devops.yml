---
# -----------------------------------------------
# Ansible Playbook
# Author: Wesley R. Silva <wesley.it@gmail.com>
# Description: This playbook will setup an
# environment with Debian_8_Testing SO.
# vim: ft=ansible
# -----------------------------------------------

- hosts: 127.0.0.1
  connection: local
  remote_user: root
  become: yes
  become_method: su
  tasks:

  - apt_repository: repo='deb http://ftp.us.debian.org/debian/ stretch main contrib non-free' state=present
  - apt_repository: repo='deb http://ftp.us.debian.org/debian/ jessie main contrib non-free' state=present
  - apt_repository: repo='deb http://ftp.us.debian.org/debian/ wheezy main contrib non-free' state=present
  - apt_repository: repo='deb http://ftp.us.debian.org/debian/ jessie-updates contrib main non-free' state=present
  - apt_repository: repo='deb http://ftp.us.debian.org/debian/ jessie-proposed-updates contrib main non-free' state=present
  - apt_repository: repo='deb http://security.debian.org/ jessie/updates contrib main non-free' state=present

  - name: Set the right permissions to some dirs
    file: path={{ item }} owner={{ main_user }} group={{ main_user }} mode=4775
    with_items:
      - /opt
      - /usr/local/src

  - name: Install (a lot of) useful packages using APT
    apt: pkg={{ item }} state=present install_recommends=yes
    with_items:
      - cowsay
      - fortune-mod
      - fortunes-mario
      - vlc
      - flashplugin-nonfree-extrasound
      - vim-nox
      - emacs24-common
      - emacsen-common
      - cryptkeeper
      - nautilus-dropbox
      - zenmap
      - wireshark-gtk
      - pwgen
      - curl
      - wget
      - docker.io
      - awscli
      - python-boto
      - python3-boto
      - rbenv
      - ruby-build
      - python-dev
      - python3-dev
      - git-all
      - packaging-dev
      - subversion

  - name: Append user to important groups
    user: name={{ main_user }} groups=root,docker,vboxusers,kvm append=yes

  - name: Allow the user to run sudo without password
    lineinfile: dest=/etc/sudoers state=present regexp='^{{ main_user }} ALL\=' line='{{ main_user }} ALL=(ALL) NOPASSWD:ALL' validate='visudo -cf %s'

  - name: Ensure the Dropbox folder exists
    become_user: "{{ main_user }}"
    file: path=/home/{{ main_user }}/Dropbox state=directory owner={{ main_user }} group={{ main_user }}

  - name: Ensure the important folder exists inside Dropbox
    become_user: "{{ main_user }}"
    file: path=/home/{{ main_user }}/Dropbox/{{ item }} state=directory owner={{ main_user }} group={{ main_user }}
    with_items:
      - Desktop
      - Documents
      - Pictures
      - Videos
      - Music
      - Public
      - Shared
      - Templates

  - name: Turn important folders on HOME into links to Dropbox
    become_user: "{{ main_user }}"
    file: src=/home/{{ main_user }}/Dropbox/{{ item }} dest=/home/{{ main_user }}/{{ item }} state=link force=yes
    with_items:
      - Desktop
      - Documents
      - Pictures
      - Videos
      - Music
      - Public
      - Shared
      - Templates

  - name: Get the bash_facilities
    become_user: "{{ main_user }}"
    git: dest=/tmp/bash_facilities repo=https://github.com/wesleyit/bash_facilities.git force=yes

  - name: Configure the bash rc files with bash_facilities
    become_user: "{{ main_user }}"
    shell: bash installer.sh && touch installed creates=/home/{{ main_user }}/.bash_facilities/installed chdir=/tmp/bash_facilities/

  - name: Configure Emacs
    become_user: "{{ main_user }}"
    git: dest=/home/{{ main_user }}/.emacs.d repo=https://github.com/wesleyit/my_org_dot_emacs.git force=yes

  - name: Get the Vim config
    become_user: "{{ main_user }}"
    git: dest=/home/{{ main_user }}/.devops-vimfiles repo=https://github.com/wesleyit/vim_devops_dist.git force=yes

  - name: Configure Vim
    become_user: "{{ main_user }}"
    shell: bash installer.sh creates=/home/{{ main_user }}/.vim_devops_dist chdir=/home/{{ main_user }}/.devops-vimfiles/
